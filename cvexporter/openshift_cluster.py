from kubernetes import config
from openshift.dynamic import DynamicClient


def get_pods(namespace=None):
    k8s_client = config.new_client_from_config()
    dyn_client = DynamicClient(k8s_client)
    pods = dyn_client.resources.get(api_version='v1', kind='Pod')
    if namespace is None:
        return pods.get()
    else:
        return pods.get(namespace=namespace)


def get_images(namespace_target=None, namespace_skip=None):
    container_images = []

    pod_list = get_pods(namespace_target)
    for pod in pod_list.items:
        namespace, podname = pod.metadata.namespace, pod.metadata.name
        if namespace_skip and pod.metadata.namespace in namespace_skip:
            continue
        if pod.status.containerStatuses is None:
            pod_status = pod.status.conditions[0].status
            if pod_status.lower() == "false":
                continue
            else:
                raise("Something unexpected happened parsing " +
                      "(ns:{0}) pod/{1}".format(namespace, podname))
        else:
            containers = pod.status.containerStatuses
        for container in containers:
            if container.imageID is None:
                raise("Unable to decypher container image info for " +
                      "(ns:{0}) pod/{1}".format(namespace, podname))
            else:
                container_images.append((namespace, podname, container.name,
                                        container.imageID))
    return container_images
