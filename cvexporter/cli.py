import sys
import logging
import click

import cvexporter.openshift_cluster
import cvexporter.quay_images  # noqa: F401


def run_cli(func, *args):
    try:
        func(*args)
    except Exception as e:
        sys.stderr.write(e.message + "\n")
        sys.exit(1)


CONTEXT_SETTINGS = dict(default_map={'run': {'skipns': 'openshift'}})


@click.group()
@click.option('--skipns', envvar='SKIPNS')
@click.option('--log-level',
              help='log-level of the command. Defaults to INFO.',
              type=click.Choice([
                    'DEBUG',
                    'INFO',
                    'WARNING',
                    'ERROR',
                    'CRITICAL']))
@click.pass_context
def cli(ctx, log_level):
    ctx.ensure_objects(dict)

    level = getattr(logging, log_level) if log_level else logging.INFO
    logging.basicConfig(format='$(levelname)s: %(message)s', level=level)


@cli.command()
@click.pass_context
def run(ctx):
    click.echo('Debug logging is %s' % (ctx.obj['DEBUG'] and 'on' or 'off'))


@cli.command()
@click.pass_context
def get_images(ctx, skipns):
    run_cli(cvexporter.get_image_list(skipns))
