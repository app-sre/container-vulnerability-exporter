#!/usr/bin/python

from kubernetes import client, config
from openshift.dynamic import DynamicClient

import json

class Image:
  ref= ""
  host = ""
  name = ""
  uri = ""
  digest = ""
  hash = ""

  def __init__(self, imageid):
    self.imageidParse(imageid)
  
  def imageidParse(self, imageid):
    """
    examplein: docker-pullable://quay.io/app-sre/nginx-gate@sha256:87428fc522803d31065e7bce3cf03fe475096631e5e07bbd7a0fde60c4cf25c7
    example-out:
      name: nginx-gate
      uri: docker-pullable://quay.io/app-sre/nginx-gate
      host: quay.io
      digest: sha256
      hash: 87428fc522803d31065e7bce3cf03fe475096631e5e07bbd7a0fde60c4cf25c7
    """
    self.name = imageid.split('@')[0].split('/')[-1]
    self.digest, self.hash = imageid.split('@')[-1].split(':')
    self.ref = self.ref.join([self.name,":",self.digest,":",self.hash])
    self.host = imageid.split('/')[2]
    self.uri = imageid.split('@')[0].split('/')[:-1]

class CVEScan:
  ns = ""
  pods = ""
  def __init__(self, ns):
    self.ns = ns


k8s_client = config.new_client_from_config()
dyn_client = DynamicClient(k8s_client)
v1_pods = dyn_client.resources.get(api_version='v1', kind='Pod')
pod_list = v1_pods.get()

def getImages():
  for pod in pod_list.items:
#    print("ns: %s\n  pod: %s" % (pod.metadata.namespace, pod.metadata.name))
    for containerstatus in pod.status.containerStatuses:
      container = containerstatus.name
      image = Image(containerstatus.imageID)
      if image.ref not in imageList:
        imageList[image.ref] = image

imageList = {}
getImages()
print("Found %d unique images." % (len(imageList)))
for iref in imageList:
  print("%s" % (iref))
